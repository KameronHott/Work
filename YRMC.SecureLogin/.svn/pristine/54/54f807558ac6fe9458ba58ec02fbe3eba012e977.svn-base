using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Text.RegularExpressions;
using System.Text;
using System.DirectoryServices;
using Code.Utilities.Extensions;

namespace YRMC.SecureLogin.Web.Controllers
{
    public class UserController : Controller
    {
        //
        // GET: /User/

        [AcceptVerbs(HttpVerbs.Get)]
        public JsonResult Index(Guid userId)
        {
            Business.Lists.User user = Business.Lists.User.GetByID(userId);
            return Json(new
            {
                id = user.ID,
                sid = user.SID,
                username = user.UserName,
                active = user.Active,
                roles = (user.IsAdmin ?
                    user.Roles.Where(r => r.Name.ToLower() == "administrators").Select(r => new
                    {
                        id = r.ID,
                        name = r.Name
                    }) : user.Roles.Select(r => new
                    {
                        id = r.ID,
                        name = r.Name
                    })
                )
            }, JsonRequestBehavior.AllowGet);
        }

        [AcceptVerbs(HttpVerbs.Post)]
        public void Add(string username)
        {
            string userSID = null;

            try
            {
                DirectoryEntry directoryEntry = new DirectoryEntry(
                    string.Format(
                        "WinNT://{0}/{1}",
                        "YRMC_MAIN",
                        username),
                    System.Configuration.ConfigurationManager.AppSettings["LDAPUserName"],
                    System.Configuration.ConfigurationManager.AppSettings["LDAPPassword"]);

                userSID = new System.Security.Principal.SecurityIdentifier(
                    (byte[])directoryEntry.Properties["objectSid"].Value, 0).ToString();
            }
            catch {  }

            if (!userSID.IsNullOrWhiteSpace())
            {
                if (!Business.Lists.User.ExistsBySID(userSID))
                {
                    Business.Edits.User user = Business.Edits.User.Create();
                    user.SID = userSID;
                    user.Active = false;
                    user.Save();

                    // Return HTTP Status successful.
                    Response.StatusCode = 200;
                }
                else
                {
                    // Return HTTP Status failure.
                    Response.StatusCode = 409;
                }
            }
            else
            {
                // Return HTTP Status failure.
                Response.StatusCode = 404;
            }
        }

        [AcceptVerbs(HttpVerbs.Get)]
        public JsonResult List()
        {
            Business.Lists.Users users = Business.Lists.Users.GetAll();

            return Json(users.Select(o => new
            {
                id = o.ID,
                sid = o.SID,
                username = o.UserName,
                active = o.Active,
                roles = (o.IsAdmin ?
                    o.Roles.Where(r => r.Name.ToLower() == "administrators").Select(r => new
                    {
                        id = r.ID,
                        name = r.Name
                    }) : o.Roles.Select(r => new
                    {
                        id = r.ID,
                        name = r.Name
                    })
                )
            }), JsonRequestBehavior.AllowGet);
        }

        [AcceptVerbs(HttpVerbs.Post)]
        public void Update(Guid id, Guid[] roles, bool active)
        {
            Business.Edits.User user = Business.Edits.User.GetByID(id);

            if (user.Active != active)
            {
                user.Active = active;
                user.Save();
            }

            Business.Lists.UserRoles userRoles = Business.Lists.UserRoles.GetByUserID(id);

            // Remove any potential Empty Guid's.
            roles = roles.Where(o => o != Guid.Empty).ToArray();

            // Delete
            foreach (Business.Lists.UserRole userRole in userRoles)
            {
                bool found = false;

                foreach (Guid role in roles)
                {
                    if (role == userRole.ID)
                    {
                        found = true;
                        break;
                    }
                }

                if (!found)
                {
                    Business.Edits.UserRole delUserRole = Business.Edits.UserRole.GetByPID(id);
                    delUserRole.Delete();
                    delUserRole.Save();
                }
            }

            // Add
            foreach (Guid role in roles)
            {
                bool found = false;

                foreach (Business.Lists.UserRole userRole in userRoles)
                {
                    if (userRole.ID == role)
                    {
                        found = true;
                        break;
                    }
                }

                if (!found)
                {
                    Business.Edits.UserRole newUserRole = Business.Edits.UserRole.Create();
                    newUserRole.PID = id;
                    newUserRole.ID = role;
                    newUserRole.Save();
                }
            }

            // Return HTTP Status successful.
            Response.StatusCode = 200;
        }

        [AcceptVerbs(HttpVerbs.Get)]
        public JsonResult Current()
        {
            Business.Security.SecurityIdentity currentUser =
                (Business.Security.SecurityIdentity)Csla.ApplicationContext.User.Identity;

            return Json(new
            {
                FullName = currentUser.Name,
                IsAdmin = currentUser.IsAdmin
            }, JsonRequestBehavior.AllowGet);
        }

        //public static string GetFullName(string UserName)
        //{
        //    try
        //    {
        //        DirectoryEntry de = new DirectoryEntry("WinNT://YRMC_MAIN/" + UserName);
        //        return de.Properties["fullName"].Value.ToString();
        //    }
        //    catch { return null; }
        //}

        //[AcceptVerbs(HttpVerbs.Get)]
        //public JsonResult SearchUser(string SearchString)
        //{
        //    string fullName = (!string.IsNullOrEmpty(GetFullName(SearchString))) ? GetFullName(SearchString).ToString() : "";
        //    string pSID = (!string.IsNullOrEmpty(GetSid(SearchString))) ? GetSid(SearchString).ToString() : "";

        //    return Json(new { fullname=fullName, psid=pSID }, JsonRequestBehavior.AllowGet);
        //}

        //[AcceptVerbs(HttpVerbs.Post)]
        //public JsonResult AddUser(string PSID, Guid RoleID)
        //{
        //    Business.Edits.User user = Business.Edits.User.Create();
        //    user.SID = PSID;
        //    user.Active = true;
        //    user.Save();

        //    Business.Edits.UserRole userrole = Business.Edits.UserRole.Create();
        //    userrole.PID = user.ID;
        //    userrole.ID = RoleID;
        //    userrole.Save();

        //    return Json(null);
        //}

        //[AcceptVerbs(HttpVerbs.Post)]
        //public JsonResult AddUserRole(Guid UserID, Guid RoleID)
        //{
        //    Business.Edits.UserRole newUserRole = Business.Edits.UserRole.Create();
        //    newUserRole.PID = UserID;
        //    newUserRole.ID = RoleID;
        //    newUserRole.Save();
        //    return Json(new object { });
        //}

        //[AcceptVerbs(HttpVerbs.Post)]
        //public JsonResult DeleteUserRole(Guid UserID, Guid RoleID)
        //{
        //    Business.Edits.UserRole editUserRole = Business.Edits.UserRole.GetByID(UserID, RoleID);
        //    editUserRole.Delete();
        //    editUserRole.Save();
        //    return Json(new object { });
        //}

        //[AcceptVerbs(HttpVerbs.Post)]
        //public JsonResult DeleteUserOrEntry(Guid TheID, string WhatToDelete)
        //{
        //    if (WhatToDelete == "user")
        //    {
        //        Business.Edits.User user = Business.Edits.User.GetByID(TheID);
        //        user.Active = false;
        //        user.Save();

        //        Business.Edits.UserRole userrole = Business.Edits.UserRole.GetByID(TheID);
        //        userrole.Delete();
        //        userrole.Save();

        //        Business.Edits.Log.WriteEntry("User deleted", Guid.Empty, Guid.Empty, Guid.Empty);
        //    }
        //    else
        //    {
        //        Business.Edits.Login login = Business.Edits.Login.GetByID(TheID);
        //        login.Active = false;
        //        login.Save();

        //        Business.Edits.Log.WriteEntry("Login deleted", Guid.Empty, TheID, login.EntryID);
        //    }
        //    return Json(new { });
        //}

        //[AcceptVerbs(HttpVerbs.Get)]
        //public JsonResult GetUserList()
        //{
        //    Business.Lists.Users users = Business.Lists.Users.GetAll();
        //    return Json(users.Select(o => new
        //    {
        //        userroleid = o.UserID,
        //        roleid = o.RoleID,
        //        rolename = o.RoleName,
        //        usersid = o.SID,
        //        username = new System.Security.Principal.SecurityIdentifier(o.SID).Translate(typeof(System.Security.Principal.NTAccount)).ToString()
        //    }), JsonRequestBehavior.AllowGet);
        //}

        //[AcceptVerbs(HttpVerbs.Get)]
        //public JsonResult GetUserRoles(Guid UserID)
        //{
        //    Business.Searches.Roles roles = Business.Searches.Roles.GetAll(UserID);
        //    return Json(roles.Select(o => new
        //    {
        //        roleid = o.ID,
        //        rolename = o.Name,
        //        roles = o.Roles.Select(r => new { id=r.ID, name=r.Name })
        //    }), JsonRequestBehavior.AllowGet);
        //}

    }
}
